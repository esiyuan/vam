<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vam.dao.LockLogMapper">
    <resultMap id="BaseResultMap" type="com.vam.dmo.LockLogDmo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="lock_type" property="lockType" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="timeout_time" property="timeoutTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, lock_type, create_time, timeout_time, status
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from vam_lock_log
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByLockType" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from vam_lock_log
        where lock_type = #{lockType,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vam_lock_log
    where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.vam.dmo.LockLogDmo" keyProperty="id" useGeneratedKeys="true">
    insert into vam_lock_log (id, lock_type, create_time, 
      timeout_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{lockType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{timeoutTime,jdbcType=TIMESTAMP},  #{status,jdbcType=INTEGER}
      )
  </insert>

    <select id="selectTimeoutIds" resultMap="BaseResultMap" parameterType="com.vam.dmo.LockLogDmo">
        select id
        from vam_lock_log
        <trim prefix="where" prefixOverrides="and|or ">
            <if test="lockType != null">
                and timeout_time &lt;= #{timeoutTime,jdbcType=TIMESTAMP}
            </if>
            <if test="lockType != null">
                and lock_type = #{lockType,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>


    <delete id="batchDeleteByPrimaryKey" parameterType="list">
        delete from vam_lock_log
        where id in (
        <foreach collection="list" item="item" index="index" separator=",">
            <trim suffixOverrides=", ">
                #{item.id,jdbcType=BIGINT},
            </trim>
        </foreach>
        )
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.vam.dmo.LockLogDmo">
        update vam_lock_log
        <set>
            <if test="lockType != null">
                lock_type = #{lockType,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeoutTime != null">
                timeout_time = #{timeoutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.vam.dmo.LockLogDmo">
    update vam_lock_log
    set lock_type = #{lockType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      timeout_time = #{timeoutTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateStatusCAS" parameterType="map">
    update vam_lock_log
    set
      status = #{newStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT} and  status = #{oldStatus,jdbcType=INTEGER}
  </update>
</mapper>